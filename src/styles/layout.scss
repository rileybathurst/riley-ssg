/*--------------------------------------------------------------
>>> TABLE OF CONTENTS:
----------------------------------------------------------------
1.0 Base
2.0 Header
3.0 Main
3.0 Footer
--------------------------------------------------------------*/

/*--------------------------------------------------------------
1.0 Base
--------------------------------------------------------------*/

.spine-border {
  grid-row: 1/3;
  grid-column: 1;
  z-index: 15; // over the top of categories on single
  justify-self: end;

  @media (min-width: $stork) {
    grid-row: 1/3;
    justify-self: start; // categories takes up that space as well
  }
}

.single .spine-border, // even tho these are the same the names help keep them seperate
.category .spine-border {
  grid-row: 1/5; // image : header : date : content
  grid-column: 1;
  justify-self: start; // I think this is a browser default

  @media (min-width: $stork) {
    grid-row: 1/4; // what are the 6: header : date : content
    justify-self: start; // categories takes up that space as well
  }
}

.passage {
  max-width: var(--pelican);
  margin-inline: auto;
  padding-inline: 0.75rem;
}

.progression {
  display: flex;
  column-gap: 0.75rem;
  max-width: var(--pelican);
  flex-flow: row wrap;

  > * {
    flex: 1 1 calc(var(--vulture) - 2rem);
  }
}

/*--------------------------------------------------------------
2.0 Header
--------------------------------------------------------------*/

.site-header {
  width: 100%;
  max-width: var(--pelican);
  margin: 0 auto 1rem * 2 auto;
  display: grid;
  grid-gap: 1rem;
  grid-template-columns: 2em 1fr 2em;

  @media (min-width: $stork) {
    grid-template-columns: 2em 1fr 1fr 1fr 2em;
    grid-template-rows: 2em 1fr 2em; // keep it tight up top with the header-logo
  }
}

.single-site-header {
  margin-right: 1rem;
  grid-template-columns: 1em 1fr;
}

.breadcrumbs {
  grid-column: 1;
  grid-row: 2 / 4;
  writing-mode: vertical-rl;
  justify-self: center;
}

.single .breadcrumbs {
  // grid-row: 1/3;
  grid-row: 3;
  // align-self: end;
  @media (min-width: $stork) {
    // grid-row: 2;
    // align-self: start;
    grid-row: 3/5;
  }
}

.header-logo {
  grid-row: 1;
  grid-column: 3;
  justify-self: center; // macth the spine

  @media (min-width: $stork) {
    align-self: end; // this is for when the menu is horizontal on single pages
    grid-column: 5; //category
  }
}

.home .header-logo {
  justify-self: center;
  align-self: start;

  @media (min-width: $stork) {
    grid-column: 5;
  }
}

.single .header-logo {
  grid-column: 3;
}

.home .header-logo svg {
  // TODO padding: 1rem/2; // guess and check to fit into the grid
  transition: var(--global-transition);
}
.home .header-logo svg:hover {
  background: var(--kingly-cloud);
}

.color-blocking {
  mix-blend-mode: multiply;
  background: var(--cherry);
  z-index: 15; //same as .spine border? should it be above or below
}

.header-color-blocking {
  @extend .color-blocking;
  grid-row: 2;
  grid-column: 2;

  @media (min-width: $stork) {
    grid-row: 1 / 4;
    grid-column: 3;
  }
}

/*--------------------------------------------------------------
2.1 Site Branding Text
--------------------------------------------------------------*/

.site-branding-text {
  grid-row: 2;
  grid-column: 2;
  z-index: 20;

  @media (min-width: $stork) {
    writing-mode: vertical-rl;
    grid-row: 1/4;
    grid-column: 3;
    place-self: center;
  }
}

// .category .site-branding-text,
.single .site-branding-text {
  grid-row: 1;
  justify-self: start; // fix problems caused by the home page
  padding-bottom: 0;
  // align-self: start;

  @media (min-width: $stork) {
    writing-mode: horizontal-tb;
    padding: 0;
    grid-column: 2;
    margin-top: 0; // ! single needs the margin but we dont here
    margin-bottom: 0; // this was -.25em but I think I've fixed that hack to pull it to the baseline
  }
}

.home .site-branding-text {
  @media (min-width: $stork) {
    grid-row: 1 / 3;
    margin-top: 1rem * 3;
    margin-bottom: 1rem; // can this be written as a single line?
  }
}

/* 
.site-branding-text h1 {
    margin: 0;
    font-size: 1.25em; // can this be written as a variable?
}
*/

.spine {
  grid-column: 3;
  grid-row: 2/4;
  writing-mode: vertical-rl;
  justify-self: center; // match header-logo
  // place-self: end; might need only bigger

  @media (min-width: $stork) {
    grid-row: 2;
    grid-column: 5;
    // align-self: end;
    // margin-bottom: 1rem*2; // match the base of the image
  }
}

.single .spine {
  grid-row: 1/3;
  align-self: end;

  @media (min-width: $stork) {
    grid-column: 3;
    // align-self: start;
  }
}

.custom-header-media,
.custom-header-photo,
.custom-header-featured-video {
  z-index: 10;
  grid-row: 1 / 3;
  grid-column: 2;

  @media (min-width: $stork) {
    grid-row: 2;
    grid-column: 2 / 4;
  }

  img,
  picture {
    width: 100%; // small images still fill the box
  }
}

.custom-header-featured-video {
  // https://css-tricks.com/NetMag/FluidWidthVideo/Article-FluidWidthVideo.php
  position: relative;
  padding-bottom: 56.25%; // 16:9
  height: 0;

  @media (min-width: $stork) {
    grid-column: 2 / 4;
  }
}

.custom-header-featured-video iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.single #top-menu {
  margin: 0;
  @media (min-width: $stork) {
    display: flex;
    flex-direction: row;
  }
}

/*------------------------------------*\
  # NAVIGATON TOP
\*------------------------------------*/

.navigation-top {
  grid-column: 2;
  grid-row: 3;

  @media (min-width: $stork) {
    grid-column: 4;
    grid-row: 2 / 4;
  }
}

.single .navigation-top {
  grid-row: 3;

  @media (min-width: $stork) {
    grid-column: 2;

    ul {
      // display: flex;
      // I think the grid is going to be easier to keep the spacing perfect with other parts of the page
      margin-top: 0; // browser reset
      padding: 0;

      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-gap: 1rem;
    }

    li {
      margin-bottom: 0;
      // margin-right: 1rem;
      padding-right: 1rem; // does making this padding solve my js finding the width problems?
    }

    li:last-child() {
      margin-right: 0;
    }
  }
}
/* Im not sure if this is needed anymore pattern lab doesnt think so
.home .navigation-top {
    grid-row: 3;
    align-self: start;
    margin-bottom: 1rem;

    @media (min-width: $stork) {
        grid-row: 1;
        grid-column: 4;
        margin-bottom: 1rem*3;
        align-self: center;
    }
} */

/*--------------------------------------------------------------
3.0 Main
--------------------------------------------------------------*/

/*--------------------------------------------------------------
3.1 Category
--------------------------------------------------------------*/

.category-header {
  max-width: 77rem; // inside the margins
  margin: 0 auto;
  display: grid;
  // grid-template-columns: 2em 1fr 8fr 1fr 2em;
  grid-template-columns: 2em 1fr 1fr 1fr 2em;
  grid-gap: 1rem;
}

.cat-head {
  grid-column: 2 / 5;
  padding-bottom: 1rem * 2;
  @media (min-width: $stork) {
    // grid-column: 3;
  }
}

.category-thumbnail {
  grid-column: 2 / 5;
  grid-row: 1 / 2;

  @media (min-width: $stork) {
    grid-row: 1;
  }
}

/* this doesnt appear to be anywhere
.article-search {
    grid-column: 2 / 12; // really?

    @media (min-width: $stork) {
        grid-column: 4 / span 1;
    }
}
*/

/* doesnt show in search 
.content_area {
    grid-column: 2 / span 10; // really?
    grid-row: 4 / span 2;
    align-self: center;

    @media (min-width: $stork) {
        grid-column: 4 / span 6; // really?
        grid-row: 3;
        align-self: start;
    }
    @media (min-width: $pelican) {
        grid-column: 4 / span 9; // really?
        grid-row: 3;
        // this cant span multiple rows but it needs to be the largest so the next row sits tight against it,
        seems kinda a bad design decision incase something else gets bigger than it
    }
}
*/

/* doesnt show in search
.more { // which more is this?
    grid-column: 2 / span 10; // really?
    grid-row: 9; // really?

    @media (min-width: $stork) {
        grid-column: 4 / span 3;
        grid-row: 6;
    }
    @media (min-width: $pelican) {
        grid-column: 4 / span 3;
        grid-row: 4;
    }
}
*/

/* doesnt show in search
.category-titles {
    grid-column: 2 / 5;
    grid-row: 2;
    position: relative; // why?
    z-index: 99; // why?
    mix-blend-mode: multiply;

    @media (min-width: $stork) {
        grid-column: 3;
        grid-row: 3;
        justify-self: center;
    }
}
*/

.category-sub {
  // width: calc(100% - 6rem);
  width: 100%;
  max-width: 72rem; // always stay inside the widest columns on the category pages
  margin: 0 auto;
  margin-bottom: 1rem;
}

.category-sub ul {
  padding-left: 0;

  @media (min-width: $stork) {
    display: grid;
    grid-template-columns: repeat(
      3,
      1fr
    ); // this is probably far too simple and should be a flex
    grid-gap: 1rem;
  }

  li {
    list-style: none;
    text-align: center;
  }
}

/*--------------------------------------------------------------
3.2 Featured
--------------------------------------------------------------*/

/* doesnt show in search
.featured-subheader {
    grid-column: 2;
    grid-row: 2 / 3;
    justify-self: center;
    writing-mode: vertical-rl;
}
*/

/* doesnt show in search
.featured-category-title {
    grid-column: 1 / span 12; // really?
    grid-row: 2;
    justify-self: center;
}
*/

/* doesnt show in search
.featured-excerpt {
    grid-column: 2 / 5;
    grid-row: 3;
    @media (min-width: $stork) {
        grid-column: 3;
        grid-row: 2;
    }
}
*/

/*--------------------------------------------------------------
3.4 Article
--------------------------------------------------------------*/
.site-main article {
  /* running wordpress post class prevents using a straight class */
  // this can now be named
  // @extend .site-header; // Im not sure this is currently working

  max-width: 77rem;
  margin: 0 auto;
  display: grid;
  grid-gap: 1rem;

  padding: 1rem * 2 0;
  padding-bottom: 0; // the spine needs to get to the base of the area
  /*
    // grid-template-columns: 4px 1fr 4fr 4fr 1fr 4px; // why 4px?
    grid-template-columns: 1rem 1fr 1rem; // why 4px?
    // maybe this should be to match the header and footer grid atleast at large sizes 2em 1fr 2fr 2fr 1fr 2em

    @media (min-width: $stork) {
        width: calc(100% - 2rem); // slightly different so the side bar fits
        // grid-template-columns: 2em 1fr 4fr 4fr 1fr 2em;
        // grid-template-columns: repeat(6, 1fr); // slightly more complex to fit with the rest of the page grid
        grid-template-columns: 2em 1fr 1fr 1fr 2em;
    } */

  grid-template-columns: 2em 1fr 2em;

  @media (min-width: $stork) {
    // width: calc(100% - 2rem); // slightly different so the sid bar fits
    grid-template-columns: 2em 1fr 1fr 1fr 2em;
  }
}

.article-thumbnail {
  grid-row: 1;
  grid-column: 1/4;
  // max-height: 100vh; // this causes issues on wide short screens but I get the idea of something tall can be very large
  // maybe it can be fixed with an overflow and then go even less than 100 to make it obvious and be able to scroll around it

  @media (min-width: $stork) {
    grid-column: 2 / 5;
  }
}

.article-thumbnail a,
.category-thumbnail a {
  width: 100%;
  // display: grid; // is this just for a place-items
  display: block; // seems more suitable
}

/*
.article-thumbnail img, .category-thumbnail img {
    // justify-self: center; // this should be handled by the block
}
*/

.article-thumbnail > a > img,
.category-thumbnail > a > img,
.article-thumbnail > a > picture,
.category-thumbnail > a > picture {
  width: 100%;
}

.article-thumbnail img {
  // specifically needed for the front page
  display: inline-block;
  width: 100%;
}

.featured-header {
  max-width: calc(77rem - 6rem);
  margin: 1rem auto;
  padding-top: 1rem;
}

.article-header {
  width: 100%;
  grid-column: 2;
  // align-self: end; // I think its it own row it cant go anywhere
  grid-row: 2;

  @media (min-width: $stork) {
    grid-column: 2 / 6;
    grid-row: 2; // this is a repeat of above
  }
}

.article-speechbubble {
  grid-column: 2;
  // justify-self: end;

  @media (min-width: $stork) {
    grid-row: 1;
    grid-column: 5;
    align-self: start;
    justify-self: center;
  }
}

.article-speechbubble > .speeechbubble {
  margin-bottom: 1rem;
}

.article-content {
  grid-column: 2;
  // margin-bottom: 1rem;

  @media (min-width: $stork) {
    // grid-column: 2 / 6;
    grid-column: 2/5;
    // margin-bottom: 1rem*3;
  }
}

.article-content-specific {
  // single posts have more content in this block which is then held in by a foundation grid
  @media (min-width: $stork) {
    // grid-column: 1 / 7;
    // grid-column: 1 / 4;
    grid-column: 1/6; // full width
  }
}

.article-content-specific img {
  width: 100%;
}

.article-content-specific hr {
  @media (min-width: $stork) {
    margin-left: 1rem * 3; // 2 for the page margins 1 for the grid gap
    margin-right: 1rem * 3;
  }
}

.article-category {
  grid-column: 2;
  // grid-row: 4;
  font-weight: bold;

  @media (min-width: $stork) {
    text-align: right;
    grid-row: 1 / 3;
    grid-column: 1;
    writing-mode: vertical-rl;
    align-self: start;
    justify-self: center;
    overflow-x: scroll;
    max-height: 45em; // incase of a long category name it will truncate
    margin-top: 1rem;

    p,
    ul {
      margin: 0; // vertical text removes margins
    }

    ul {
      padding-left: 0; // browser reset
      padding-top: 1rem; // browser alter
    }
  }

  /* .category-container {
        // display: flex;
    } */

  p {
    display: inline-block;
  }

  ul {
    padding-left: 1rem;
    // display: flex;
    // flex-wrap: wrap;
    display: inline;
  }

  li {
    list-style: none;
    margin-right: 1rem;
    display: inline;
  }
}

.single .article-category {
  @media (min-width: $stork) {
    grid-row: 1 / 4; // header : date : content
    align-self: start;
    grid-column: 1;
  }

  h3 {
    margin: 0;
    grid-column: 1;
  }
}

.article-base {
  //min-height: 3em; // this is a breaker in categories
  max-width: var(--albatross);
  margin-top: 1rem * 3; // rewrite this as a single
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 0;

  @media (min-width: $stork) {
    display: grid;
    grid-template-columns: 2em 1fr 1fr 1fr 2em;
    grid-gap: 1rem;
  }
}

.base-explore {
  @media (min-width: $stork) {
    grid-column: 1;
    writing-mode: vertical-rl;
  }
}

.base-tags {
  grid-column: 1;
  grid-row: 3;
  writing-mode: vertical-rl;

  @media (min-width: $stork) {
    grid-column: 5;
    grid-row: 1;
  }
}

.article-category .subheading {
  @media (min-width: $stork) {
    margin-bottom: 0;
  }
}

.article-category h3 ul,
.featured-category h3 ul {
  list-style-type: none;
  margin-left: 0;
  padding: 0;

  @media (min-width: $stork) {
    margin-bottom: 0;
  }
}

.article-explore {
  grid-column: 2;
  margin-bottom: 1rem;
  // border-top: 2px solid var(--cherry);
  // text-align: center;
  // padding: 1rem; // fix the hack with the a class button below

  @media (min-width: $stork) {
    grid-column: 2/5;
  }

  a {
    background: var(--cherry);
    padding: 1rem;
    display: inline-block;
    color: var(--brilliance);
    font-weight: bold;
    text-decoration: none;
  }

  a:hover {
    background: hsl(var(--cherry__base), var(--dull));
    color: var(
      --brilliance
    ); // otherwise this gets overwritten to the default a
  }

  // I dont like the hover here but need to do actual work on it
}

// can the next few items be written nicer?
.post-navigation {
  grid-column: 2 / 5;
  @media (min-width: $stork) {
    grid-column: 2;
  }
}

.article-comments {
  grid-column: 2 / 5;

  padding: 1rem;
  @extend .background-dirty;

  @media (min-width: $stork) {
    grid-column: 3;
  }
}

.article-tags {
  grid-column: 2 / 5;
  @media (min-width: $stork) {
    grid-column: 4;
  }

  h3 {
    @media (min-width: $stork) {
      writing-mode: vertical-rl;
    }
  }
}

.fp-header {
  // front page header but I think this should be renamed to an atom
  grid-row: 1;
  grid-column: 2;
  z-index: 20; // document why this is here
  align-self: end;

  @media (min-width: $stork) {
    grid-column: 2 / 5;
    // padding: 1rem;
  }
}

.category-post--header {
  // very similar to the .fp-header but a new more useful name and the padding without the image background
  grid-row: 1;
  grid-column: 2;
  // align-self: end;

  @media (min-width: $stork) {
    grid-column: 2 / 5;
  }
}

/*--------------------------------------------------------------
2.7 Featured Category
--------------------------------------------------------------*/

.featured-thumbnail {
  grid-column: 2 / 6;
  grid-row: 1;
  mix-blend-mode: multiply;
  filter: grayscale(100%);
}

.featured-header {
  grid-column: 3 / 5;
  align-self: center;
  grid-row: 1;
}

.featured-category {
  grid-column: 3 / 5;
}

.featured--excerpt {
  grid-column: 2;

  @media (min-width: $stork) {
    grid-column: 2/5;
  }
}

/*--------------------------------------------------------------
3.6 Pagination
--------------------------------------------------------------*/

.pagination {
  margin: 3rem auto;
  max-width: var(--albatross);
  display: grid;
  grid-gap: 1rem;
  grid-template-columns: 2em 1fr 4fr 1fr 2em; // fix
}

.pagination h2 {
  /* as wordpress controls this we are using elements for the grid */
  grid-column: 1 / 3;

  @media (min-width: $pelican) {
    grid-column: 3 / span 4;
  }
}

.pagination .nav-links {
  grid-column: 2 / 5;

  display: flex;
  flex-direction: row;
  justify-items: flex-start; // is there a place-items for flex?
  align-items: flex-start;

  @media (min-width: $pelican) {
    grid-column: 3;
  }
}

.pagination .nav-links .next,
.pagination .nav-links .prev {
  // what is this overwritting?
  width: auto;
  writing-mode: vertical-rl;
  border-bottom: none;
  box-shadow: none;
}

.pagination span,
.pagination a {
  margin-right: 1rem;
}

/*--------------------------------------------------------------
3.7 Single
--------------------------------------------------------------*/

// front page and category does some things
.single .custom-header-media,
.single .custom-header-photo,
.single .custom-header-featured-video {
  grid-row: 2;
  align-self: end;

  @media (min-width: $stork) {
    grid-column: 2;
  }
}

.single .article-header,
.page .article-header,
.cat-404 .article-header {
  grid-row: 1; // re-organize with the featured image in the header
}

/* these dont appear to exisit
.article-tags h3 {
    margin: 0; // why nothing below?
}
*/

.single .article-category h3,
.single .article-category .post-categories {
  margin: 0; // these are vertical text hence not having a margin below
}

.post-categories > li {
  @media (min-width: $stork) {
    margin-bottom: 0; // vertical text doesnt need a margin below
  }
}

.comment-reply-title {
  // Im sure this is in comments but it needs documentation
  display: none;
}

.post-navigation {
  @media (min-width: $stork) {
    grid-column: 2;
  }
}

.specific-grid {
  display: flex;
  flex-direction: column;

  @media (min-width: $stork) {
    display: grid;
    grid-template-columns: 2rem 1fr 1fr 1fr 2rem;
    grid-gap: 1rem;
  }

  h3 {
    @media (min-width: $stork) {
      grid-column: 2/5;
    }
  }
}

.subtitle {
  @media (min-width: $stork) {
    grid-column: 1;
    grid-row: 1;
    writing-mode: vertical-rl;
    text-decoration: line-through;
    margin: 0; // vertical text doesnt have regular margins
  }
}

.specific-grid__main-width {
  grid-column: 2/5;
}

.continental {
  @media (min-width: $stork) {
    grid-column: 2/5;
  }
}

.continental-2 {
  grid-column: 2;
}

.continental-3 {
  grid-column: 3;
}

.continental-4 {
  grid-column: 4;
}

.west-medium {
  @media (min-width: $stork) {
    grid-column: 2;
  }
}

.east-medium {
  @media (min-width: $stork) {
    grid-column: 3;
  }
}

.west-large {
  @media (min-width: $pelican) {
    grid-column: 2;
  }
}

.east-large {
  @media (min-width: $pelican) {
    grid-column: 3;
  }
}

.gr-1-m {
  // this is really different from other classes?
  @media (min-width: $stork) {
    grid-row: 1;
  }
}

/*--------------------------------------------------------------
4.0 Footer
--------------------------------------------------------------*/

.site-footer {
  width: 100%;
  // max-width: 71rem; // keeps inside of the margins 77 - 2 on each side
  margin: 0 auto 2rem auto;
  padding-bottom: 1rem;

  @media (min-width: $stork) {
    margin-top: 1rem * 5; // guess and check
  }
}

.site-footer--browse {
  // max-width: calc(77rem - 6rem);
  max-width: var(--condor);
  margin: 0 auto;
}

.footer-background__step {
  padding: 1rem; // this allows the grid gap to sit inside as a ruler and not break the edges
}

.footer_menu {
  display: grid;
  grid-template-columns: 1fr; // start simple stack then go to direction. maybe this should be a flex
  grid-gap: 1rem; // TODO: columns and rows
  padding-top: 1rem;
  padding-left: 0;
  max-width: var(--albatross);
}

.footer_info {
  display: grid;
  grid-template-columns: repeat(3, 1fr); // TODO: minmax stack for small
  grid-gap: 1rem; // TODO: columns and rows
  max-width: var(--albatross);
  margin-inline: auto;

  address {
    grid-column: 3;
  }
}

.footer_info div,
address {
  background: var(--kingly-cloud); // step back with the grid gap fill
  @media (prefers-color-scheme: dark) {
    background: #2c2c2c; // TODO: this should be made a variable
  }
}

.footer_menu li {
  list-style: none;
}

.footer_nav a {
  padding: 0;
}

.footer_info {
  background: var(
    --brilliance
  ); // this is a way of filling the grip gap as a different color
  @media (prefers-color-scheme: dark) {
    background: var(--black-metal);
  }
}

.footer_copyright,
.footer_nav,
.footer_contact {
  padding: 1rem;
  @media (min-width: $stork) {
    grid-row: 1;
    z-index: 10;
  }
}

.footer_nav {
  @media (min-width: $stork) {
    // grid-row: 1;
    grid-column: 3;
    // text-align: center;
  }
}

.footer_nav ul {
  margin: 0;
  padding: 0; // browser reset
}

.footer_nav li {
  display: inline-block;
}

.footer_contact {
  @media (min-width: $stork) {
    grid-column: 4;
    text-align: right;
  }
}

.footer_1,
.footer_5 {
  // Im not super happy with the far edges being white but its getting closer to right

  display: none;

  @media (min-width: $stork) {
    display: initial;
    grid-row: 1;
    // z-index: -1;
  }
}

.footer_1 {
  @media (min-width: $stork) {
    grid-row: 1;
    grid-column: 1/3; // hide a grid-gap that is otherwise white
  }
}

.footer_5 {
  @media (min-width: $stork) {
    grid-row: 1;
    grid-column: 4/6; // hide a grid-gap that is otherwise white
  }
}

/*------------------------------------*\
  # RESPONSIVE IFRAME
  https://css-tricks.com/responsive-iframes/
\*------------------------------------*/

[style*="--aspect-ratio"] > :first-child {
  width: 100%;
}
[style*="--aspect-ratio"] > img {
  height: auto;
}
@supports (--custom: property) {
  [style*="--aspect-ratio"] {
    position: relative;
  }
  [style*="--aspect-ratio"]::before {
    content: "";
    display: block;
    padding-bottom: calc(100% / (var(--aspect-ratio)));
  }
  [style*="--aspect-ratio"] > :first-child {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
  }
}

.continental-gallery {
  display: flex;
  flex-wrap: wrap;

  section {
    // flex: 1 1 33%;
    flex: 1 1 29%; // guess and check number to fit 3
    padding: 1rem;
  }
}

.specific-full-picture img {
  background: var(--brilliance);
  padding: 1rem;
  width: calc(100% - 2rem);
}

.specific-overlaying__image-grid {
  display: grid;

  picture,
  .overlaying-image {
    grid-row: 1;
    grid-column: 1;
  }
}

.specific-grid__col-2 {
  grid-column: 2;
}

.specific-grid__col-3 {
  grid-column: 3;
}

.specific-grid__col-4 {
  grid-column: 4;
}

.base-next__grid {
  display: grid;

  a, // the image
    h4, // the title
    .color-blocking {
    grid-row: 1;
    grid-column: 1;
  }

  h4 {
    place-self: center;
  }

  h4 a {
    color: var(--brilliance);
    z-index: 16;
    position: relative;
  }
}

.site-header-hero-hr {
  grid-row: 2;
  grid-column: 2;
}

// these are a couple little design blocks
.single-site-header-color-block_1 {
  grid-row: 1;
  grid-column: 1;
  background: var(--cherry);
  width: 100%;
  height: 4px;
  margin: 0;
  margin-top: 1rem; // guess and check to line up with the top of the Text
}

.single-site-header-color-block_2 {
  grid-row: 2;
  grid-column: 1;
  background: var(--cherry);
  width: 100%;
  height: 4px;
  margin: 0;
}

.reading-width {
  width: var(--condor);
  margin: 0 auto;
}

// TODO: Name
/*------------------*/
//  #HEADER__CONCEPT
/*------------------*/

.header__concept {
  display: grid;
  grid-template-columns: 2rem 1fr 2rem;
  place-items: center;
  color: var(--cherry);
  font-weight: 700;

  > * {
    grid-row: 1;
  }

  .breadcrumbs {
    grid-column: 1;
    writing-mode: vertical-rl;
  }

  .riley {
    grid-column: 2;
    z-index: 11;
    mix-blend-mode: multiply;
  }

  .bathurst {
    grid-column: 2;
    // color: #2c2c2c;
    // font-weight: 100;
    // font-style: oblique;
    // filter: blur(0.125rem);
    z-index: 10;
    color: transparent;
    mix-blend-mode: multiply;
  }

  .spine {
    grid-column: 3;
    writing-mode: vertical-rl;
  }

  svg {
    width: 33%;
    height: 33%;
    grid-column: 2;
  }

  .white {
    fill: white;
    filter: blur(0.125rem);
  }

  .cherry {
    fill: transparent;
    stroke: var(--cherry);
    stroke-width: 0.125rem;
    filter: blur(0.5rem);
    padding-inline-start: 0.125rem;
    padding-block-start: 0.125rem;
  }

  .headshot {
    grid-column: 2;
    grid-row: 1;
    aspect-ratio: 16/9;
  }
}

/*------------------*/
//  #SLAB
/*------------------*/

.slab {
  background: var(--kingly-cloud);

  article {
    max-width: var(--albatross);
    margin-inline: auto;
    display: grid;
    column-gap: 0.75rem;
    row-gap: var(--baseline);

    padding-block-start: 2rem;

    grid-template-columns: 2em 1fr 2em;

    h2 {
      grid-row: 1;
      grid-column: 2;
      z-index: var(--emergent);
      align-self: end;

      a {
        color: white;
      }
    }

    .hero {
      grid-row: 1;
      grid-column: 2;
      filter: grayscale(100%);
    }

    .color-blocking {
      grid-row: 1;
      grid-column: 2;
      z-index: var(--canopy);
    }

    .excerpt {
      grid-row: 2;
      grid-column: 2;
    }

    .explore {
      grid-row: 3;
      grid-column: 2;
    }

    .trades {
      grid-row: 1/3;
      grid-column: 1;
      writing-mode: vertical-rl;
    }

    .dates {
      grid-row: 1/3;
      grid-column: 3;
      writing-mode: vertical-rl;
    }
  }
}

.social-icons {
  max-width: var(--albatross);
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 1em;
}

.social-icons > .fp-box > a {
  display: inline-block;
}

.social-icons svg {
  width: 2em;
  padding-top: 1rem;
  padding-bottom: 1rem;

  @media (min-width: $stork) {
    // red text on brackets isnt a good sign does it need a prefix
    width: 3em;
  }
}

.social-icons svg {
  fill: var(--brilliance);
}

.social-icons svg:hover {
  fill: var(--kingly-cloud);
}
